{
    "Description": "AWS CloudFormation Sample Template VPC_Single_Instance_In_Subnet: Sample template showing how to create a VPC and add an EC2 instance with an Elastic IP address and a security group. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",
    
    "Parameters": {
        "InstanceType": {
            "Description": "WebServer EC2 instance type",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
        "SSHLocation": {
            "Description": " The IP address range that can be used to SSH to the EC2 instances",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        }
    },
    
    "Resources": {

        "WebServerGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "AvailabilityZones": { "Fn::GetAZs": "" },
                "VPCZoneIdentifier" : [ "subnet-d467a3b0", "subnet-4e3c7a39" ],
                "LaunchConfigurationName": { "Ref": "LaunchConfig" },
                "DesiredCapacity": "4",
                "MinSize": "2",
                "MaxSize": "6",
                "LoadBalancerNames": ["example"]
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": "4",
                    "Timeout": "PT15M"
                }
            }
        },
        
        "LaunchConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Metadata": {
                "Comment": "Install a simple application",
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                            "/tmp/a": {
                                "content": {
                                    "Fn::Join": [ "\n",
                                        [
                                            "{",
                                            "\"Status\" : \"SUCCESS\",",
                                            "\"UniqueId\" : \"ID1234\",",
                                            "\"Data\" : \"Application has completed configuration.\",",
                                            "\"Reason\" : \"Configuration Complete\"",
                                            "}"
                                        ]
                                    ]
                                },
                                "mode": "000644",
                                "owner": "root",
                                "group": "root"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "AssociatePublicIpAddress" : "True",
                "KeyName": {
                    "Ref": "KeyName"
                },
                "ImageId": "ami-fba67596",
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                
                                "yum install -y aws-cfn-bootstrap\n",
                                
                                "/opt/aws/bin/cfn-signal --exit-code $? --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource WebServerGroup ",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
        }
    }
}
